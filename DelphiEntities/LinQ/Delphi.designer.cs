#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DelphiEntities.LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jahad")]
	public partial class DelphiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDL(DL instance);
    partial void UpdateDL(DL instance);
    partial void DeleteDL(DL instance);
    partial void InsertDLView(DLView instance);
    partial void UpdateDLView(DLView instance);
    partial void DeleteDLView(DLView instance);
    partial void InsertGL(GL instance);
    partial void UpdateGL(GL instance);
    partial void DeleteGL(GL instance);
    partial void InsertSL(SL instance);
    partial void UpdateSL(SL instance);
    partial void DeleteSL(SL instance);
    partial void InsertAccVchHdr(AccVchHdr instance);
    partial void UpdateAccVchHdr(AccVchHdr instance);
    partial void DeleteAccVchHdr(AccVchHdr instance);
    partial void InsertAccVchItm(AccVchItm instance);
    partial void UpdateAccVchItm(AccVchItm instance);
    partial void DeleteAccVchItm(AccVchItm instance);
    partial void InsertCostCenter(CostCenter instance);
    partial void UpdateCostCenter(CostCenter instance);
    partial void DeleteCostCenter(CostCenter instance);
    partial void InsertCrspnd(Crspnd instance);
    partial void UpdateCrspnd(Crspnd instance);
    partial void DeleteCrspnd(Crspnd instance);
    partial void InsertInvProject(InvProject instance);
    partial void UpdateInvProject(InvProject instance);
    partial void DeleteInvProject(InvProject instance);
    partial void InsertRpaBank(RpaBank instance);
    partial void UpdateRpaBank(RpaBank instance);
    partial void DeleteRpaBank(RpaBank instance);
    partial void InsertRpaBankAccount(RpaBankAccount instance);
    partial void UpdateRpaBankAccount(RpaBankAccount instance);
    partial void DeleteRpaBankAccount(RpaBankAccount instance);
    partial void InsertRpaBankAccountType(RpaBankAccountType instance);
    partial void UpdateRpaBankAccountType(RpaBankAccountType instance);
    partial void DeleteRpaBankAccountType(RpaBankAccountType instance);
    partial void InsertAccVchType(AccVchType instance);
    partial void UpdateAccVchType(AccVchType instance);
    partial void DeleteAccVchType(AccVchType instance);
    #endregion
		
		public DelphiDataContext() : 
				base(global::DelphiEntities.Properties.Settings.Default.jahadConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DelphiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DelphiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DelphiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DelphiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DL> DLs
		{
			get
			{
				return this.GetTable<DL>();
			}
		}
		
		public System.Data.Linq.Table<DLView> DLViews
		{
			get
			{
				return this.GetTable<DLView>();
			}
		}
		
		public System.Data.Linq.Table<GL> GLs
		{
			get
			{
				return this.GetTable<GL>();
			}
		}
		
		public System.Data.Linq.Table<SL> SLs
		{
			get
			{
				return this.GetTable<SL>();
			}
		}
		
		public System.Data.Linq.Table<AccVchHdr> AccVchHdrs
		{
			get
			{
				return this.GetTable<AccVchHdr>();
			}
		}
		
		public System.Data.Linq.Table<AccVchItm> AccVchItms
		{
			get
			{
				return this.GetTable<AccVchItm>();
			}
		}
		
		public System.Data.Linq.Table<CostCenter> CostCenters
		{
			get
			{
				return this.GetTable<CostCenter>();
			}
		}
		
		public System.Data.Linq.Table<Crspnd> Crspnds
		{
			get
			{
				return this.GetTable<Crspnd>();
			}
		}
		
		public System.Data.Linq.Table<InvProject> InvProjects
		{
			get
			{
				return this.GetTable<InvProject>();
			}
		}
		
		public System.Data.Linq.Table<RpaBank> RpaBanks
		{
			get
			{
				return this.GetTable<RpaBank>();
			}
		}
		
		public System.Data.Linq.Table<RpaBankAccount> RpaBankAccounts
		{
			get
			{
				return this.GetTable<RpaBankAccount>();
			}
		}
		
		public System.Data.Linq.Table<RpaBankAccountType> RpaBankAccountTypes
		{
			get
			{
				return this.GetTable<RpaBankAccountType>();
			}
		}
		
		public System.Data.Linq.Table<AccVchType> AccVchTypes
		{
			get
			{
				return this.GetTable<AccVchType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.DL")]
	public partial class DL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccNum;
		
		private string _Title;
		
		private int _DLType;
		
		private string _LatinTitle;
		
		private string _Definition;
		
		private System.Nullable<char> _HasCurrency;
		
		private System.Nullable<int> _CurrencyRef;
		
		private System.Nullable<byte> _Active;
		
		private EntitySet<AccVchItm> _AccVchItms;
		
		private EntitySet<AccVchItm> _AccVchItms1;
		
		private EntitySet<AccVchItm> _AccVchItms2;
		
		private EntitySet<CostCenter> _CostCenters;
		
		private EntitySet<Crspnd> _Crspnds;
		
		private EntitySet<RpaBankAccount> _RpaBankAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccNumChanging(string value);
    partial void OnAccNumChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDLTypeChanging(int value);
    partial void OnDLTypeChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnHasCurrencyChanging(System.Nullable<char> value);
    partial void OnHasCurrencyChanged();
    partial void OnCurrencyRefChanging(System.Nullable<int> value);
    partial void OnCurrencyRefChanged();
    partial void OnActiveChanging(System.Nullable<byte> value);
    partial void OnActiveChanged();
    #endregion
		
		public DL()
		{
			this._AccVchItms = new EntitySet<AccVchItm>(new Action<AccVchItm>(this.attach_AccVchItms), new Action<AccVchItm>(this.detach_AccVchItms));
			this._AccVchItms1 = new EntitySet<AccVchItm>(new Action<AccVchItm>(this.attach_AccVchItms1), new Action<AccVchItm>(this.detach_AccVchItms1));
			this._AccVchItms2 = new EntitySet<AccVchItm>(new Action<AccVchItm>(this.attach_AccVchItms2), new Action<AccVchItm>(this.detach_AccVchItms2));
			this._CostCenters = new EntitySet<CostCenter>(new Action<CostCenter>(this.attach_CostCenters), new Action<CostCenter>(this.detach_CostCenters));
			this._Crspnds = new EntitySet<Crspnd>(new Action<Crspnd>(this.attach_Crspnds), new Action<Crspnd>(this.detach_Crspnds));
			this._RpaBankAccounts = new EntitySet<RpaBankAccount>(new Action<RpaBankAccount>(this.attach_RpaBankAccounts), new Action<RpaBankAccount>(this.detach_RpaBankAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNum", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccNum
		{
			get
			{
				return this._AccNum;
			}
			set
			{
				if ((this._AccNum != value))
				{
					this.OnAccNumChanging(value);
					this.SendPropertyChanging();
					this._AccNum = value;
					this.SendPropertyChanged("AccNum");
					this.OnAccNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLType", DbType="Int NOT NULL")]
		public int DLType
		{
			get
			{
				return this._DLType;
			}
			set
			{
				if ((this._DLType != value))
				{
					this.OnDLTypeChanging(value);
					this.SendPropertyChanging();
					this._DLType = value;
					this.SendPropertyChanged("DLType");
					this.OnDLTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(100)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCurrency", DbType="Char(1)")]
		public System.Nullable<char> HasCurrency
		{
			get
			{
				return this._HasCurrency;
			}
			set
			{
				if ((this._HasCurrency != value))
				{
					this.OnHasCurrencyChanging(value);
					this.SendPropertyChanging();
					this._HasCurrency = value;
					this.SendPropertyChanged("HasCurrency");
					this.OnHasCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRef", DbType="Int")]
		public System.Nullable<int> CurrencyRef
		{
			get
			{
				return this._CurrencyRef;
			}
			set
			{
				if ((this._CurrencyRef != value))
				{
					this.OnCurrencyRefChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRef = value;
					this.SendPropertyChanged("CurrencyRef");
					this.OnCurrencyRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="TinyInt")]
		public System.Nullable<byte> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm", Storage="_AccVchItms", ThisKey="AccNum", OtherKey="DlFive")]
		public EntitySet<AccVchItm> AccVchItms
		{
			get
			{
				return this._AccVchItms;
			}
			set
			{
				this._AccVchItms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm1", Storage="_AccVchItms1", ThisKey="AccNum", OtherKey="DlSix")]
		public EntitySet<AccVchItm> AccVchItms1
		{
			get
			{
				return this._AccVchItms1;
			}
			set
			{
				this._AccVchItms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm2", Storage="_AccVchItms2", ThisKey="AccNum", OtherKey="DLRef")]
		public EntitySet<AccVchItm> AccVchItms2
		{
			get
			{
				return this._AccVchItms2;
			}
			set
			{
				this._AccVchItms2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_CostCenter", Storage="_CostCenters", ThisKey="AccNum", OtherKey="DLRef")]
		public EntitySet<CostCenter> CostCenters
		{
			get
			{
				return this._CostCenters;
			}
			set
			{
				this._CostCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_Crspnd", Storage="_Crspnds", ThisKey="AccNum", OtherKey="DLRef")]
		public EntitySet<Crspnd> Crspnds
		{
			get
			{
				return this._Crspnds;
			}
			set
			{
				this._Crspnds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_RpaBankAccount", Storage="_RpaBankAccounts", ThisKey="AccNum", OtherKey="DlRef")]
		public EntitySet<RpaBankAccount> RpaBankAccounts
		{
			get
			{
				return this._RpaBankAccounts;
			}
			set
			{
				this._RpaBankAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL = this;
		}
		
		private void detach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL = null;
		}
		
		private void attach_AccVchItms1(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL1 = this;
		}
		
		private void detach_AccVchItms1(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL1 = null;
		}
		
		private void attach_AccVchItms2(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL2 = this;
		}
		
		private void detach_AccVchItms2(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.DL2 = null;
		}
		
		private void attach_CostCenters(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.DL = this;
		}
		
		private void detach_CostCenters(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.DL = null;
		}
		
		private void attach_Crspnds(Crspnd entity)
		{
			this.SendPropertyChanging();
			entity.DL = this;
		}
		
		private void detach_Crspnds(Crspnd entity)
		{
			this.SendPropertyChanging();
			entity.DL = null;
		}
		
		private void attach_RpaBankAccounts(RpaBankAccount entity)
		{
			this.SendPropertyChanging();
			entity.DL = this;
		}
		
		private void detach_RpaBankAccounts(RpaBankAccount entity)
		{
			this.SendPropertyChanging();
			entity.DL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.DLViews")]
	public partial class DLView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DLType;
		
		private string _DLName;
		
		private string _ViewName;
		
		private string _WrapperName;
		
		private System.Nullable<int> _NewDataIndex;
		
		private string _LatinTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDLTypeChanging(int value);
    partial void OnDLTypeChanged();
    partial void OnDLNameChanging(string value);
    partial void OnDLNameChanged();
    partial void OnViewNameChanging(string value);
    partial void OnViewNameChanged();
    partial void OnWrapperNameChanging(string value);
    partial void OnWrapperNameChanged();
    partial void OnNewDataIndexChanging(System.Nullable<int> value);
    partial void OnNewDataIndexChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    #endregion
		
		public DLView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DLType
		{
			get
			{
				return this._DLType;
			}
			set
			{
				if ((this._DLType != value))
				{
					this.OnDLTypeChanging(value);
					this.SendPropertyChanging();
					this._DLType = value;
					this.SendPropertyChanged("DLType");
					this.OnDLTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DLName
		{
			get
			{
				return this._DLName;
			}
			set
			{
				if ((this._DLName != value))
				{
					this.OnDLNameChanging(value);
					this.SendPropertyChanging();
					this._DLName = value;
					this.SendPropertyChanged("DLName");
					this.OnDLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewName", DbType="VarChar(30)")]
		public string ViewName
		{
			get
			{
				return this._ViewName;
			}
			set
			{
				if ((this._ViewName != value))
				{
					this.OnViewNameChanging(value);
					this.SendPropertyChanging();
					this._ViewName = value;
					this.SendPropertyChanged("ViewName");
					this.OnViewNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrapperName", DbType="VarChar(30)")]
		public string WrapperName
		{
			get
			{
				return this._WrapperName;
			}
			set
			{
				if ((this._WrapperName != value))
				{
					this.OnWrapperNameChanging(value);
					this.SendPropertyChanging();
					this._WrapperName = value;
					this.SendPropertyChanged("WrapperName");
					this.OnWrapperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewDataIndex", DbType="Int")]
		public System.Nullable<int> NewDataIndex
		{
			get
			{
				return this._NewDataIndex;
			}
			set
			{
				if ((this._NewDataIndex != value))
				{
					this.OnNewDataIndexChanging(value);
					this.SendPropertyChanging();
					this._NewDataIndex = value;
					this.SendPropertyChanged("NewDataIndex");
					this.OnNewDataIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(30)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.GL")]
	public partial class GL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccNum;
		
		private string _Title;
		
		private string _PLRef;
		
		private string _BalanceType;
		
		private string _LatinTitle;
		
		private string _Definition;
		
		private EntitySet<SL> _SLs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccNumChanging(string value);
    partial void OnAccNumChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPLRefChanging(string value);
    partial void OnPLRefChanged();
    partial void OnBalanceTypeChanging(string value);
    partial void OnBalanceTypeChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    #endregion
		
		public GL()
		{
			this._SLs = new EntitySet<SL>(new Action<SL>(this.attach_SLs), new Action<SL>(this.detach_SLs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNum", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccNum
		{
			get
			{
				return this._AccNum;
			}
			set
			{
				if ((this._AccNum != value))
				{
					this.OnAccNumChanging(value);
					this.SendPropertyChanging();
					this._AccNum = value;
					this.SendPropertyChanged("AccNum");
					this.OnAccNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLRef", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string PLRef
		{
			get
			{
				return this._PLRef;
			}
			set
			{
				if ((this._PLRef != value))
				{
					this.OnPLRefChanging(value);
					this.SendPropertyChanging();
					this._PLRef = value;
					this.SendPropertyChanged("PLRef");
					this.OnPLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceType", DbType="Char(5)")]
		public string BalanceType
		{
			get
			{
				return this._BalanceType;
			}
			set
			{
				if ((this._BalanceType != value))
				{
					this.OnBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._BalanceType = value;
					this.SendPropertyChanged("BalanceType");
					this.OnBalanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(100)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GL_SL", Storage="_SLs", ThisKey="AccNum", OtherKey="GLRef")]
		public EntitySet<SL> SLs
		{
			get
			{
				return this._SLs;
			}
			set
			{
				this._SLs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLs(SL entity)
		{
			this.SendPropertyChanging();
			entity.GL = this;
		}
		
		private void detach_SLs(SL entity)
		{
			this.SendPropertyChanging();
			entity.GL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.SL")]
	public partial class SL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccNum;
		
		private string _Title;
		
		private string _GLRef;
		
		private string _BalanceType;
		
		private char _HasCurrency;
		
		private System.Nullable<int> _CurrencyRef;
		
		private char _HasExchange;
		
		private System.Nullable<int> _DLGroups;
		
		private string _LatinTitle;
		
		private string _Definition;
		
		private System.Nullable<int> _DlFive;
		
		private System.Nullable<int> _DLSix;
		
		private System.Nullable<char> _HasWarranty;
		
		private System.Nullable<char> _HasQty;
		
		private System.Nullable<char> _HasCash;
		
		private System.Nullable<byte> _Active;
		
		private string _OpositNatureSLRef;
		
		private EntitySet<SL> _SLs;
		
		private EntitySet<AccVchItm> _AccVchItms;
		
		private EntityRef<GL> _GL;
		
		private EntityRef<SL> _SL1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccNumChanging(string value);
    partial void OnAccNumChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGLRefChanging(string value);
    partial void OnGLRefChanged();
    partial void OnBalanceTypeChanging(string value);
    partial void OnBalanceTypeChanged();
    partial void OnHasCurrencyChanging(char value);
    partial void OnHasCurrencyChanged();
    partial void OnCurrencyRefChanging(System.Nullable<int> value);
    partial void OnCurrencyRefChanged();
    partial void OnHasExchangeChanging(char value);
    partial void OnHasExchangeChanged();
    partial void OnDLGroupsChanging(System.Nullable<int> value);
    partial void OnDLGroupsChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnDlFiveChanging(System.Nullable<int> value);
    partial void OnDlFiveChanged();
    partial void OnDLSixChanging(System.Nullable<int> value);
    partial void OnDLSixChanged();
    partial void OnHasWarrantyChanging(System.Nullable<char> value);
    partial void OnHasWarrantyChanged();
    partial void OnHasQtyChanging(System.Nullable<char> value);
    partial void OnHasQtyChanged();
    partial void OnHasCashChanging(System.Nullable<char> value);
    partial void OnHasCashChanged();
    partial void OnActiveChanging(System.Nullable<byte> value);
    partial void OnActiveChanged();
    partial void OnOpositNatureSLRefChanging(string value);
    partial void OnOpositNatureSLRefChanged();
    #endregion
		
		public SL()
		{
			this._SLs = new EntitySet<SL>(new Action<SL>(this.attach_SLs), new Action<SL>(this.detach_SLs));
			this._AccVchItms = new EntitySet<AccVchItm>(new Action<AccVchItm>(this.attach_AccVchItms), new Action<AccVchItm>(this.detach_AccVchItms));
			this._GL = default(EntityRef<GL>);
			this._SL1 = default(EntityRef<SL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccNum", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccNum
		{
			get
			{
				return this._AccNum;
			}
			set
			{
				if ((this._AccNum != value))
				{
					this.OnAccNumChanging(value);
					this.SendPropertyChanging();
					this._AccNum = value;
					this.SendPropertyChanged("AccNum");
					this.OnAccNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GLRef", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string GLRef
		{
			get
			{
				return this._GLRef;
			}
			set
			{
				if ((this._GLRef != value))
				{
					if (this._GL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGLRefChanging(value);
					this.SendPropertyChanging();
					this._GLRef = value;
					this.SendPropertyChanged("GLRef");
					this.OnGLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceType", DbType="Char(5)")]
		public string BalanceType
		{
			get
			{
				return this._BalanceType;
			}
			set
			{
				if ((this._BalanceType != value))
				{
					this.OnBalanceTypeChanging(value);
					this.SendPropertyChanging();
					this._BalanceType = value;
					this.SendPropertyChanged("BalanceType");
					this.OnBalanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCurrency", DbType="Char(1) NOT NULL")]
		public char HasCurrency
		{
			get
			{
				return this._HasCurrency;
			}
			set
			{
				if ((this._HasCurrency != value))
				{
					this.OnHasCurrencyChanging(value);
					this.SendPropertyChanging();
					this._HasCurrency = value;
					this.SendPropertyChanged("HasCurrency");
					this.OnHasCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRef", DbType="Int")]
		public System.Nullable<int> CurrencyRef
		{
			get
			{
				return this._CurrencyRef;
			}
			set
			{
				if ((this._CurrencyRef != value))
				{
					this.OnCurrencyRefChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRef = value;
					this.SendPropertyChanged("CurrencyRef");
					this.OnCurrencyRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExchange", DbType="Char(1) NOT NULL")]
		public char HasExchange
		{
			get
			{
				return this._HasExchange;
			}
			set
			{
				if ((this._HasExchange != value))
				{
					this.OnHasExchangeChanging(value);
					this.SendPropertyChanging();
					this._HasExchange = value;
					this.SendPropertyChanged("HasExchange");
					this.OnHasExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLGroups", DbType="Int")]
		public System.Nullable<int> DLGroups
		{
			get
			{
				return this._DLGroups;
			}
			set
			{
				if ((this._DLGroups != value))
				{
					this.OnDLGroupsChanging(value);
					this.SendPropertyChanging();
					this._DLGroups = value;
					this.SendPropertyChanged("DLGroups");
					this.OnDLGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(100)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlFive", DbType="Int")]
		public System.Nullable<int> DlFive
		{
			get
			{
				return this._DlFive;
			}
			set
			{
				if ((this._DlFive != value))
				{
					this.OnDlFiveChanging(value);
					this.SendPropertyChanging();
					this._DlFive = value;
					this.SendPropertyChanged("DlFive");
					this.OnDlFiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLSix", DbType="Int")]
		public System.Nullable<int> DLSix
		{
			get
			{
				return this._DLSix;
			}
			set
			{
				if ((this._DLSix != value))
				{
					this.OnDLSixChanging(value);
					this.SendPropertyChanging();
					this._DLSix = value;
					this.SendPropertyChanged("DLSix");
					this.OnDLSixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWarranty", DbType="Char(1)")]
		public System.Nullable<char> HasWarranty
		{
			get
			{
				return this._HasWarranty;
			}
			set
			{
				if ((this._HasWarranty != value))
				{
					this.OnHasWarrantyChanging(value);
					this.SendPropertyChanging();
					this._HasWarranty = value;
					this.SendPropertyChanged("HasWarranty");
					this.OnHasWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQty", DbType="Char(1)")]
		public System.Nullable<char> HasQty
		{
			get
			{
				return this._HasQty;
			}
			set
			{
				if ((this._HasQty != value))
				{
					this.OnHasQtyChanging(value);
					this.SendPropertyChanging();
					this._HasQty = value;
					this.SendPropertyChanged("HasQty");
					this.OnHasQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCash", DbType="Char(1)")]
		public System.Nullable<char> HasCash
		{
			get
			{
				return this._HasCash;
			}
			set
			{
				if ((this._HasCash != value))
				{
					this.OnHasCashChanging(value);
					this.SendPropertyChanging();
					this._HasCash = value;
					this.SendPropertyChanged("HasCash");
					this.OnHasCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="TinyInt")]
		public System.Nullable<byte> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpositNatureSLRef", DbType="Char(10)")]
		public string OpositNatureSLRef
		{
			get
			{
				return this._OpositNatureSLRef;
			}
			set
			{
				if ((this._OpositNatureSLRef != value))
				{
					if (this._SL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpositNatureSLRefChanging(value);
					this.SendPropertyChanging();
					this._OpositNatureSLRef = value;
					this.SendPropertyChanged("OpositNatureSLRef");
					this.OnOpositNatureSLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SL_SL", Storage="_SLs", ThisKey="AccNum", OtherKey="OpositNatureSLRef")]
		public EntitySet<SL> SLs
		{
			get
			{
				return this._SLs;
			}
			set
			{
				this._SLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SL_AccVchItm", Storage="_AccVchItms", ThisKey="AccNum", OtherKey="SLRef")]
		public EntitySet<AccVchItm> AccVchItms
		{
			get
			{
				return this._AccVchItms;
			}
			set
			{
				this._AccVchItms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GL_SL", Storage="_GL", ThisKey="GLRef", OtherKey="AccNum", IsForeignKey=true)]
		public GL GL
		{
			get
			{
				return this._GL.Entity;
			}
			set
			{
				GL previousValue = this._GL.Entity;
				if (((previousValue != value) 
							|| (this._GL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GL.Entity = null;
						previousValue.SLs.Remove(this);
					}
					this._GL.Entity = value;
					if ((value != null))
					{
						value.SLs.Add(this);
						this._GLRef = value.AccNum;
					}
					else
					{
						this._GLRef = default(string);
					}
					this.SendPropertyChanged("GL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SL_SL", Storage="_SL1", ThisKey="OpositNatureSLRef", OtherKey="AccNum", IsForeignKey=true)]
		public SL SL1
		{
			get
			{
				return this._SL1.Entity;
			}
			set
			{
				SL previousValue = this._SL1.Entity;
				if (((previousValue != value) 
							|| (this._SL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SL1.Entity = null;
						previousValue.SLs.Remove(this);
					}
					this._SL1.Entity = value;
					if ((value != null))
					{
						value.SLs.Add(this);
						this._OpositNatureSLRef = value.AccNum;
					}
					else
					{
						this._OpositNatureSLRef = default(string);
					}
					this.SendPropertyChanged("SL1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SLs(SL entity)
		{
			this.SendPropertyChanging();
			entity.SL1 = this;
		}
		
		private void detach_SLs(SL entity)
		{
			this.SendPropertyChanging();
			entity.SL1 = null;
		}
		
		private void attach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.SL = this;
		}
		
		private void detach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.SL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.AccVchHdr")]
	public partial class AccVchHdr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HdrVchID;
		
		private System.Nullable<int> _Num;
		
		private System.Nullable<System.DateTime> _VchDate;
		
		private System.Nullable<int> _LocalNum;
		
		private string _Ctgry;
		
		private string _State;
		
		private System.Nullable<double> _Amount;
		
		private string _SystemsRef;
		
		private System.Nullable<int> _ExchHdrRef;
		
		private char _Exchangable;
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _DailyId;
		
		private System.Nullable<int> _TempNum;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<int> _Confirmer;
		
		private System.Nullable<int> _BranchCode;
		
		private string _HdrDesc;
		
		private string _HdrLatinDesc;
		
		private System.Nullable<int> _GroupRef;
		
		private EntitySet<AccVchItm> _AccVchItms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHdrVchIDChanging(int value);
    partial void OnHdrVchIDChanged();
    partial void OnNumChanging(System.Nullable<int> value);
    partial void OnNumChanged();
    partial void OnVchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVchDateChanged();
    partial void OnLocalNumChanging(System.Nullable<int> value);
    partial void OnLocalNumChanged();
    partial void OnCtgryChanging(string value);
    partial void OnCtgryChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnSystemsRefChanging(string value);
    partial void OnSystemsRefChanged();
    partial void OnExchHdrRefChanging(System.Nullable<int> value);
    partial void OnExchHdrRefChanged();
    partial void OnExchangableChanging(char value);
    partial void OnExchangableChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnDailyIdChanging(System.Nullable<int> value);
    partial void OnDailyIdChanged();
    partial void OnTempNumChanging(System.Nullable<int> value);
    partial void OnTempNumChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnConfirmerChanging(System.Nullable<int> value);
    partial void OnConfirmerChanged();
    partial void OnBranchCodeChanging(System.Nullable<int> value);
    partial void OnBranchCodeChanged();
    partial void OnHdrDescChanging(string value);
    partial void OnHdrDescChanged();
    partial void OnHdrLatinDescChanging(string value);
    partial void OnHdrLatinDescChanged();
    partial void OnGroupRefChanging(System.Nullable<int> value);
    partial void OnGroupRefChanged();
    #endregion
		
		public AccVchHdr()
		{
			this._AccVchItms = new EntitySet<AccVchItm>(new Action<AccVchItm>(this.attach_AccVchItms), new Action<AccVchItm>(this.detach_AccVchItms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdrVchID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HdrVchID
		{
			get
			{
				return this._HdrVchID;
			}
			set
			{
				if ((this._HdrVchID != value))
				{
					this.OnHdrVchIDChanging(value);
					this.SendPropertyChanging();
					this._HdrVchID = value;
					this.SendPropertyChanged("HdrVchID");
					this.OnHdrVchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int")]
		public System.Nullable<int> Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VchDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> VchDate
		{
			get
			{
				return this._VchDate;
			}
			set
			{
				if ((this._VchDate != value))
				{
					this.OnVchDateChanging(value);
					this.SendPropertyChanging();
					this._VchDate = value;
					this.SendPropertyChanged("VchDate");
					this.OnVchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalNum", DbType="Int")]
		public System.Nullable<int> LocalNum
		{
			get
			{
				return this._LocalNum;
			}
			set
			{
				if ((this._LocalNum != value))
				{
					this.OnLocalNumChanging(value);
					this.SendPropertyChanging();
					this._LocalNum = value;
					this.SendPropertyChanged("LocalNum");
					this.OnLocalNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ctgry", DbType="Char(5)")]
		public string Ctgry
		{
			get
			{
				return this._Ctgry;
			}
			set
			{
				if ((this._Ctgry != value))
				{
					this.OnCtgryChanging(value);
					this.SendPropertyChanging();
					this._Ctgry = value;
					this.SendPropertyChanged("Ctgry");
					this.OnCtgryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemsRef", DbType="Char(5)")]
		public string SystemsRef
		{
			get
			{
				return this._SystemsRef;
			}
			set
			{
				if ((this._SystemsRef != value))
				{
					this.OnSystemsRefChanging(value);
					this.SendPropertyChanging();
					this._SystemsRef = value;
					this.SendPropertyChanged("SystemsRef");
					this.OnSystemsRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchHdrRef", DbType="Int")]
		public System.Nullable<int> ExchHdrRef
		{
			get
			{
				return this._ExchHdrRef;
			}
			set
			{
				if ((this._ExchHdrRef != value))
				{
					this.OnExchHdrRefChanging(value);
					this.SendPropertyChanging();
					this._ExchHdrRef = value;
					this.SendPropertyChanged("ExchHdrRef");
					this.OnExchHdrRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchangable", DbType="Char(1) NOT NULL")]
		public char Exchangable
		{
			get
			{
				return this._Exchangable;
			}
			set
			{
				if ((this._Exchangable != value))
				{
					this.OnExchangableChanging(value);
					this.SendPropertyChanging();
					this._Exchangable = value;
					this.SendPropertyChanged("Exchangable");
					this.OnExchangableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyId", DbType="Int")]
		public System.Nullable<int> DailyId
		{
			get
			{
				return this._DailyId;
			}
			set
			{
				if ((this._DailyId != value))
				{
					this.OnDailyIdChanging(value);
					this.SendPropertyChanging();
					this._DailyId = value;
					this.SendPropertyChanged("DailyId");
					this.OnDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempNum", DbType="Int")]
		public System.Nullable<int> TempNum
		{
			get
			{
				return this._TempNum;
			}
			set
			{
				if ((this._TempNum != value))
				{
					this.OnTempNumChanging(value);
					this.SendPropertyChanging();
					this._TempNum = value;
					this.SendPropertyChanged("TempNum");
					this.OnTempNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Confirmer", DbType="Int")]
		public System.Nullable<int> Confirmer
		{
			get
			{
				return this._Confirmer;
			}
			set
			{
				if ((this._Confirmer != value))
				{
					this.OnConfirmerChanging(value);
					this.SendPropertyChanging();
					this._Confirmer = value;
					this.SendPropertyChanged("Confirmer");
					this.OnConfirmerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="Int")]
		public System.Nullable<int> BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdrDesc", DbType="VarChar(255)")]
		public string HdrDesc
		{
			get
			{
				return this._HdrDesc;
			}
			set
			{
				if ((this._HdrDesc != value))
				{
					this.OnHdrDescChanging(value);
					this.SendPropertyChanging();
					this._HdrDesc = value;
					this.SendPropertyChanged("HdrDesc");
					this.OnHdrDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdrLatinDesc", DbType="VarChar(255)")]
		public string HdrLatinDesc
		{
			get
			{
				return this._HdrLatinDesc;
			}
			set
			{
				if ((this._HdrLatinDesc != value))
				{
					this.OnHdrLatinDescChanging(value);
					this.SendPropertyChanging();
					this._HdrLatinDesc = value;
					this.SendPropertyChanged("HdrLatinDesc");
					this.OnHdrLatinDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupRef", DbType="Int")]
		public System.Nullable<int> GroupRef
		{
			get
			{
				return this._GroupRef;
			}
			set
			{
				if ((this._GroupRef != value))
				{
					this.OnGroupRefChanging(value);
					this.SendPropertyChanging();
					this._GroupRef = value;
					this.SendPropertyChanged("GroupRef");
					this.OnGroupRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccVchHdr_AccVchItm", Storage="_AccVchItms", ThisKey="HdrVchID", OtherKey="HdrRef")]
		public EntitySet<AccVchItm> AccVchItms
		{
			get
			{
				return this._AccVchItms;
			}
			set
			{
				this._AccVchItms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.AccVchHdr = this;
		}
		
		private void detach_AccVchItms(AccVchItm entity)
		{
			this.SendPropertyChanging();
			entity.AccVchHdr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.AccVchItm")]
	public partial class AccVchItm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VchItmId;
		
		private System.Nullable<int> _Seq;
		
		private int _HdrRef;
		
		private string _SLRef;
		
		private string _DLRef;
		
		private string _Descr;
		
		private double _Debit;
		
		private double _Credit;
		
		private System.Nullable<decimal> _CurVal;
		
		private string _LatinDescr;
		
		private System.Nullable<int> _CurrencyRef;
		
		private System.Nullable<int> _RepCurRef;
		
		private System.Nullable<char> _HasExchange;
		
		private System.Nullable<char> _HasCurrency;
		
		private string _PersuitNo;
		
		private System.Nullable<System.DateTime> _PersuitDate;
		
		private System.Nullable<double> _Qty;
		
		private string _DlFive;
		
		private string _DlSix;
		
		private System.Nullable<int> _Num;
		
		private System.Nullable<System.DateTime> _VchDate;
		
		private string _Ctgry;
		
		private string _State;
		
		private string _SystemsRef;
		
		private System.Nullable<short> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<int> _TempNum;
		
		private System.Nullable<int> _branch_code;
		
		private string _Comment;
		
		private System.Nullable<double> _CurRateVal;
		
		private System.Nullable<int> _CurConvFact;
		
		private System.Nullable<int> _AccountBaseCur;
		
		private System.Nullable<decimal> _CreditCurVal;
		
		private System.Nullable<decimal> _DebitCurVal;
		
		private System.Nullable<double> _DebitQty;
		
		private System.Nullable<double> _CreditQty;
		
		private EntityRef<DL> _DL;
		
		private EntityRef<DL> _DL1;
		
		private EntityRef<SL> _SL;
		
		private EntityRef<AccVchHdr> _AccVchHdr;
		
		private EntityRef<DL> _DL2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVchItmIdChanging(int value);
    partial void OnVchItmIdChanged();
    partial void OnSeqChanging(System.Nullable<int> value);
    partial void OnSeqChanged();
    partial void OnHdrRefChanging(int value);
    partial void OnHdrRefChanged();
    partial void OnSLRefChanging(string value);
    partial void OnSLRefChanged();
    partial void OnDLRefChanging(string value);
    partial void OnDLRefChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnDebitChanging(double value);
    partial void OnDebitChanged();
    partial void OnCreditChanging(double value);
    partial void OnCreditChanged();
    partial void OnCurValChanging(System.Nullable<decimal> value);
    partial void OnCurValChanged();
    partial void OnLatinDescrChanging(string value);
    partial void OnLatinDescrChanged();
    partial void OnCurrencyRefChanging(System.Nullable<int> value);
    partial void OnCurrencyRefChanged();
    partial void OnRepCurRefChanging(System.Nullable<int> value);
    partial void OnRepCurRefChanged();
    partial void OnHasExchangeChanging(System.Nullable<char> value);
    partial void OnHasExchangeChanged();
    partial void OnHasCurrencyChanging(System.Nullable<char> value);
    partial void OnHasCurrencyChanged();
    partial void OnPersuitNoChanging(string value);
    partial void OnPersuitNoChanged();
    partial void OnPersuitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPersuitDateChanged();
    partial void OnQtyChanging(System.Nullable<double> value);
    partial void OnQtyChanged();
    partial void OnDlFiveChanging(string value);
    partial void OnDlFiveChanged();
    partial void OnDlSixChanging(string value);
    partial void OnDlSixChanged();
    partial void OnNumChanging(System.Nullable<int> value);
    partial void OnNumChanged();
    partial void OnVchDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVchDateChanged();
    partial void OnCtgryChanging(string value);
    partial void OnCtgryChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnSystemsRefChanging(string value);
    partial void OnSystemsRefChanged();
    partial void OnYearChanging(System.Nullable<short> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnTempNumChanging(System.Nullable<int> value);
    partial void OnTempNumChanged();
    partial void Onbranch_codeChanging(System.Nullable<int> value);
    partial void Onbranch_codeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCurRateValChanging(System.Nullable<double> value);
    partial void OnCurRateValChanged();
    partial void OnCurConvFactChanging(System.Nullable<int> value);
    partial void OnCurConvFactChanged();
    partial void OnAccountBaseCurChanging(System.Nullable<int> value);
    partial void OnAccountBaseCurChanged();
    partial void OnCreditCurValChanging(System.Nullable<decimal> value);
    partial void OnCreditCurValChanged();
    partial void OnDebitCurValChanging(System.Nullable<decimal> value);
    partial void OnDebitCurValChanged();
    partial void OnDebitQtyChanging(System.Nullable<double> value);
    partial void OnDebitQtyChanged();
    partial void OnCreditQtyChanging(System.Nullable<double> value);
    partial void OnCreditQtyChanged();
    #endregion
		
		public AccVchItm()
		{
			this._DL = default(EntityRef<DL>);
			this._DL1 = default(EntityRef<DL>);
			this._SL = default(EntityRef<SL>);
			this._AccVchHdr = default(EntityRef<AccVchHdr>);
			this._DL2 = default(EntityRef<DL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VchItmId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VchItmId
		{
			get
			{
				return this._VchItmId;
			}
			set
			{
				if ((this._VchItmId != value))
				{
					this.OnVchItmIdChanging(value);
					this.SendPropertyChanging();
					this._VchItmId = value;
					this.SendPropertyChanged("VchItmId");
					this.OnVchItmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq", DbType="Int")]
		public System.Nullable<int> Seq
		{
			get
			{
				return this._Seq;
			}
			set
			{
				if ((this._Seq != value))
				{
					this.OnSeqChanging(value);
					this.SendPropertyChanging();
					this._Seq = value;
					this.SendPropertyChanged("Seq");
					this.OnSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HdrRef", DbType="Int NOT NULL")]
		public int HdrRef
		{
			get
			{
				return this._HdrRef;
			}
			set
			{
				if ((this._HdrRef != value))
				{
					if (this._AccVchHdr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHdrRefChanging(value);
					this.SendPropertyChanging();
					this._HdrRef = value;
					this.SendPropertyChanged("HdrRef");
					this.OnHdrRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLRef", DbType="Char(10)")]
		public string SLRef
		{
			get
			{
				return this._SLRef;
			}
			set
			{
				if ((this._SLRef != value))
				{
					if (this._SL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSLRefChanging(value);
					this.SendPropertyChanging();
					this._SLRef = value;
					this.SendPropertyChanged("SLRef");
					this.OnSLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLRef", DbType="Char(10)")]
		public string DLRef
		{
			get
			{
				return this._DLRef;
			}
			set
			{
				if ((this._DLRef != value))
				{
					if (this._DL2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDLRefChanging(value);
					this.SendPropertyChanging();
					this._DLRef = value;
					this.SendPropertyChanged("DLRef");
					this.OnDLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(255)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Float NOT NULL")]
		public double Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Float NOT NULL")]
		public double Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurVal", DbType="Money")]
		public System.Nullable<decimal> CurVal
		{
			get
			{
				return this._CurVal;
			}
			set
			{
				if ((this._CurVal != value))
				{
					this.OnCurValChanging(value);
					this.SendPropertyChanging();
					this._CurVal = value;
					this.SendPropertyChanged("CurVal");
					this.OnCurValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinDescr", DbType="VarChar(255)")]
		public string LatinDescr
		{
			get
			{
				return this._LatinDescr;
			}
			set
			{
				if ((this._LatinDescr != value))
				{
					this.OnLatinDescrChanging(value);
					this.SendPropertyChanging();
					this._LatinDescr = value;
					this.SendPropertyChanged("LatinDescr");
					this.OnLatinDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRef", DbType="Int")]
		public System.Nullable<int> CurrencyRef
		{
			get
			{
				return this._CurrencyRef;
			}
			set
			{
				if ((this._CurrencyRef != value))
				{
					this.OnCurrencyRefChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRef = value;
					this.SendPropertyChanged("CurrencyRef");
					this.OnCurrencyRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepCurRef", DbType="Int")]
		public System.Nullable<int> RepCurRef
		{
			get
			{
				return this._RepCurRef;
			}
			set
			{
				if ((this._RepCurRef != value))
				{
					this.OnRepCurRefChanging(value);
					this.SendPropertyChanging();
					this._RepCurRef = value;
					this.SendPropertyChanged("RepCurRef");
					this.OnRepCurRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExchange", DbType="Char(1)")]
		public System.Nullable<char> HasExchange
		{
			get
			{
				return this._HasExchange;
			}
			set
			{
				if ((this._HasExchange != value))
				{
					this.OnHasExchangeChanging(value);
					this.SendPropertyChanging();
					this._HasExchange = value;
					this.SendPropertyChanged("HasExchange");
					this.OnHasExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCurrency", DbType="Char(1)")]
		public System.Nullable<char> HasCurrency
		{
			get
			{
				return this._HasCurrency;
			}
			set
			{
				if ((this._HasCurrency != value))
				{
					this.OnHasCurrencyChanging(value);
					this.SendPropertyChanging();
					this._HasCurrency = value;
					this.SendPropertyChanged("HasCurrency");
					this.OnHasCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersuitNo", DbType="NVarChar(40)")]
		public string PersuitNo
		{
			get
			{
				return this._PersuitNo;
			}
			set
			{
				if ((this._PersuitNo != value))
				{
					this.OnPersuitNoChanging(value);
					this.SendPropertyChanging();
					this._PersuitNo = value;
					this.SendPropertyChanged("PersuitNo");
					this.OnPersuitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersuitDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PersuitDate
		{
			get
			{
				return this._PersuitDate;
			}
			set
			{
				if ((this._PersuitDate != value))
				{
					this.OnPersuitDateChanging(value);
					this.SendPropertyChanging();
					this._PersuitDate = value;
					this.SendPropertyChanged("PersuitDate");
					this.OnPersuitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlFive", DbType="Char(10)")]
		public string DlFive
		{
			get
			{
				return this._DlFive;
			}
			set
			{
				if ((this._DlFive != value))
				{
					if (this._DL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDlFiveChanging(value);
					this.SendPropertyChanging();
					this._DlFive = value;
					this.SendPropertyChanged("DlFive");
					this.OnDlFiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlSix", DbType="Char(10)")]
		public string DlSix
		{
			get
			{
				return this._DlSix;
			}
			set
			{
				if ((this._DlSix != value))
				{
					if (this._DL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDlSixChanging(value);
					this.SendPropertyChanging();
					this._DlSix = value;
					this.SendPropertyChanged("DlSix");
					this.OnDlSixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int")]
		public System.Nullable<int> Num
		{
			get
			{
				return this._Num;
			}
			set
			{
				if ((this._Num != value))
				{
					this.OnNumChanging(value);
					this.SendPropertyChanging();
					this._Num = value;
					this.SendPropertyChanged("Num");
					this.OnNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VchDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> VchDate
		{
			get
			{
				return this._VchDate;
			}
			set
			{
				if ((this._VchDate != value))
				{
					this.OnVchDateChanging(value);
					this.SendPropertyChanging();
					this._VchDate = value;
					this.SendPropertyChanged("VchDate");
					this.OnVchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ctgry", DbType="Char(5)")]
		public string Ctgry
		{
			get
			{
				return this._Ctgry;
			}
			set
			{
				if ((this._Ctgry != value))
				{
					this.OnCtgryChanging(value);
					this.SendPropertyChanging();
					this._Ctgry = value;
					this.SendPropertyChanged("Ctgry");
					this.OnCtgryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(5)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemsRef", DbType="Char(5)")]
		public string SystemsRef
		{
			get
			{
				return this._SystemsRef;
			}
			set
			{
				if ((this._SystemsRef != value))
				{
					this.OnSystemsRefChanging(value);
					this.SendPropertyChanging();
					this._SystemsRef = value;
					this.SendPropertyChanged("SystemsRef");
					this.OnSystemsRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt")]
		public System.Nullable<short> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempNum", DbType="Int")]
		public System.Nullable<int> TempNum
		{
			get
			{
				return this._TempNum;
			}
			set
			{
				if ((this._TempNum != value))
				{
					this.OnTempNumChanging(value);
					this.SendPropertyChanging();
					this._TempNum = value;
					this.SendPropertyChanged("TempNum");
					this.OnTempNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch_code", DbType="Int")]
		public System.Nullable<int> branch_code
		{
			get
			{
				return this._branch_code;
			}
			set
			{
				if ((this._branch_code != value))
				{
					this.Onbranch_codeChanging(value);
					this.SendPropertyChanging();
					this._branch_code = value;
					this.SendPropertyChanged("branch_code");
					this.Onbranch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurRateVal", DbType="Float")]
		public System.Nullable<double> CurRateVal
		{
			get
			{
				return this._CurRateVal;
			}
			set
			{
				if ((this._CurRateVal != value))
				{
					this.OnCurRateValChanging(value);
					this.SendPropertyChanging();
					this._CurRateVal = value;
					this.SendPropertyChanged("CurRateVal");
					this.OnCurRateValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurConvFact", DbType="Int")]
		public System.Nullable<int> CurConvFact
		{
			get
			{
				return this._CurConvFact;
			}
			set
			{
				if ((this._CurConvFact != value))
				{
					this.OnCurConvFactChanging(value);
					this.SendPropertyChanging();
					this._CurConvFact = value;
					this.SendPropertyChanged("CurConvFact");
					this.OnCurConvFactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBaseCur", DbType="Int")]
		public System.Nullable<int> AccountBaseCur
		{
			get
			{
				return this._AccountBaseCur;
			}
			set
			{
				if ((this._AccountBaseCur != value))
				{
					this.OnAccountBaseCurChanging(value);
					this.SendPropertyChanging();
					this._AccountBaseCur = value;
					this.SendPropertyChanged("AccountBaseCur");
					this.OnAccountBaseCurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCurVal", DbType="Money")]
		public System.Nullable<decimal> CreditCurVal
		{
			get
			{
				return this._CreditCurVal;
			}
			set
			{
				if ((this._CreditCurVal != value))
				{
					this.OnCreditCurValChanging(value);
					this.SendPropertyChanging();
					this._CreditCurVal = value;
					this.SendPropertyChanged("CreditCurVal");
					this.OnCreditCurValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitCurVal", DbType="Money")]
		public System.Nullable<decimal> DebitCurVal
		{
			get
			{
				return this._DebitCurVal;
			}
			set
			{
				if ((this._DebitCurVal != value))
				{
					this.OnDebitCurValChanging(value);
					this.SendPropertyChanging();
					this._DebitCurVal = value;
					this.SendPropertyChanged("DebitCurVal");
					this.OnDebitCurValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitQty", DbType="Float")]
		public System.Nullable<double> DebitQty
		{
			get
			{
				return this._DebitQty;
			}
			set
			{
				if ((this._DebitQty != value))
				{
					this.OnDebitQtyChanging(value);
					this.SendPropertyChanging();
					this._DebitQty = value;
					this.SendPropertyChanged("DebitQty");
					this.OnDebitQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditQty", DbType="Float")]
		public System.Nullable<double> CreditQty
		{
			get
			{
				return this._CreditQty;
			}
			set
			{
				if ((this._CreditQty != value))
				{
					this.OnCreditQtyChanging(value);
					this.SendPropertyChanging();
					this._CreditQty = value;
					this.SendPropertyChanged("CreditQty");
					this.OnCreditQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm", Storage="_DL", ThisKey="DlFive", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL
		{
			get
			{
				return this._DL.Entity;
			}
			set
			{
				DL previousValue = this._DL.Entity;
				if (((previousValue != value) 
							|| (this._DL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL.Entity = null;
						previousValue.AccVchItms.Remove(this);
					}
					this._DL.Entity = value;
					if ((value != null))
					{
						value.AccVchItms.Add(this);
						this._DlFive = value.AccNum;
					}
					else
					{
						this._DlFive = default(string);
					}
					this.SendPropertyChanged("DL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm1", Storage="_DL1", ThisKey="DlSix", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL1
		{
			get
			{
				return this._DL1.Entity;
			}
			set
			{
				DL previousValue = this._DL1.Entity;
				if (((previousValue != value) 
							|| (this._DL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL1.Entity = null;
						previousValue.AccVchItms1.Remove(this);
					}
					this._DL1.Entity = value;
					if ((value != null))
					{
						value.AccVchItms1.Add(this);
						this._DlSix = value.AccNum;
					}
					else
					{
						this._DlSix = default(string);
					}
					this.SendPropertyChanged("DL1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SL_AccVchItm", Storage="_SL", ThisKey="SLRef", OtherKey="AccNum", IsForeignKey=true)]
		public SL SL
		{
			get
			{
				return this._SL.Entity;
			}
			set
			{
				SL previousValue = this._SL.Entity;
				if (((previousValue != value) 
							|| (this._SL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SL.Entity = null;
						previousValue.AccVchItms.Remove(this);
					}
					this._SL.Entity = value;
					if ((value != null))
					{
						value.AccVchItms.Add(this);
						this._SLRef = value.AccNum;
					}
					else
					{
						this._SLRef = default(string);
					}
					this.SendPropertyChanged("SL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccVchHdr_AccVchItm", Storage="_AccVchHdr", ThisKey="HdrRef", OtherKey="HdrVchID", IsForeignKey=true)]
		public AccVchHdr AccVchHdr
		{
			get
			{
				return this._AccVchHdr.Entity;
			}
			set
			{
				AccVchHdr previousValue = this._AccVchHdr.Entity;
				if (((previousValue != value) 
							|| (this._AccVchHdr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccVchHdr.Entity = null;
						previousValue.AccVchItms.Remove(this);
					}
					this._AccVchHdr.Entity = value;
					if ((value != null))
					{
						value.AccVchItms.Add(this);
						this._HdrRef = value.HdrVchID;
					}
					else
					{
						this._HdrRef = default(int);
					}
					this.SendPropertyChanged("AccVchHdr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_AccVchItm2", Storage="_DL2", ThisKey="DLRef", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL2
		{
			get
			{
				return this._DL2.Entity;
			}
			set
			{
				DL previousValue = this._DL2.Entity;
				if (((previousValue != value) 
							|| (this._DL2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL2.Entity = null;
						previousValue.AccVchItms2.Remove(this);
					}
					this._DL2.Entity = value;
					if ((value != null))
					{
						value.AccVchItms2.Add(this);
						this._DLRef = value.AccNum;
					}
					else
					{
						this._DLRef = default(string);
					}
					this.SendPropertyChanged("DL2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="cac.CostCenter")]
	public partial class CostCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CostCenterID;
		
		private string _CCCode;
		
		private string _Title;
		
		private string _CenterType;
		
		private string _DLRef;
		
		private System.Nullable<int> _ccTreeRef;
		
		private string _LatinTitle;
		
		private string _AlocBase;
		
		private System.Nullable<int> _active;
		
		private EntityRef<DL> _DL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostCenterIDChanging(int value);
    partial void OnCostCenterIDChanged();
    partial void OnCCCodeChanging(string value);
    partial void OnCCCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCenterTypeChanging(string value);
    partial void OnCenterTypeChanged();
    partial void OnDLRefChanging(string value);
    partial void OnDLRefChanged();
    partial void OnccTreeRefChanging(System.Nullable<int> value);
    partial void OnccTreeRefChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    partial void OnAlocBaseChanging(string value);
    partial void OnAlocBaseChanged();
    partial void OnactiveChanging(System.Nullable<int> value);
    partial void OnactiveChanged();
    #endregion
		
		public CostCenter()
		{
			this._DL = default(EntityRef<DL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CostCenterID
		{
			get
			{
				return this._CostCenterID;
			}
			set
			{
				if ((this._CostCenterID != value))
				{
					this.OnCostCenterIDChanging(value);
					this.SendPropertyChanging();
					this._CostCenterID = value;
					this.SendPropertyChanged("CostCenterID");
					this.OnCostCenterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCode", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CCCode
		{
			get
			{
				return this._CCCode;
			}
			set
			{
				if ((this._CCCode != value))
				{
					this.OnCCCodeChanging(value);
					this.SendPropertyChanging();
					this._CCCode = value;
					this.SendPropertyChanged("CCCode");
					this.OnCCCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterType", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CenterType
		{
			get
			{
				return this._CenterType;
			}
			set
			{
				if ((this._CenterType != value))
				{
					this.OnCenterTypeChanging(value);
					this.SendPropertyChanging();
					this._CenterType = value;
					this.SendPropertyChanged("CenterType");
					this.OnCenterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLRef", DbType="Char(10)")]
		public string DLRef
		{
			get
			{
				return this._DLRef;
			}
			set
			{
				if ((this._DLRef != value))
				{
					if (this._DL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDLRefChanging(value);
					this.SendPropertyChanging();
					this._DLRef = value;
					this.SendPropertyChanged("DLRef");
					this.OnDLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ccTreeRef", DbType="Int")]
		public System.Nullable<int> ccTreeRef
		{
			get
			{
				return this._ccTreeRef;
			}
			set
			{
				if ((this._ccTreeRef != value))
				{
					this.OnccTreeRefChanging(value);
					this.SendPropertyChanging();
					this._ccTreeRef = value;
					this.SendPropertyChanged("ccTreeRef");
					this.OnccTreeRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(50)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlocBase", DbType="VarChar(30)")]
		public string AlocBase
		{
			get
			{
				return this._AlocBase;
			}
			set
			{
				if ((this._AlocBase != value))
				{
					this.OnAlocBaseChanging(value);
					this.SendPropertyChanging();
					this._AlocBase = value;
					this.SendPropertyChanged("AlocBase");
					this.OnAlocBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Int")]
		public System.Nullable<int> active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_CostCenter", Storage="_DL", ThisKey="DLRef", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL
		{
			get
			{
				return this._DL.Entity;
			}
			set
			{
				DL previousValue = this._DL.Entity;
				if (((previousValue != value) 
							|| (this._DL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL.Entity = null;
						previousValue.CostCenters.Remove(this);
					}
					this._DL.Entity = value;
					if ((value != null))
					{
						value.CostCenters.Add(this);
						this._DLRef = value.AccNum;
					}
					else
					{
						this._DLRef = default(string);
					}
					this.SendPropertyChanged("DL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="gnr.Crspnd")]
	public partial class Crspnd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial;
		
		private string _RecType;
		
		private string _EconCode;
		
		private string _Title;
		
		private string _FName;
		
		private string _LName;
		
		private string _NickName;
		
		private string _CompType;
		
		private string _CompName;
		
		private System.Nullable<int> _Usage;
		
		private string _DLRef;
		
		private System.Nullable<int> _MainAddrRef;
		
		private string _Title_En;
		
		private string _FName_En;
		
		private string _LName_En;
		
		private string _CompName_En;
		
		private string _NationalCode;
		
		private string _FatherName;
		
		private string _IDNo;
		
		private EntityRef<DL> _DL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialChanging(int value);
    partial void OnSerialChanged();
    partial void OnRecTypeChanging(string value);
    partial void OnRecTypeChanged();
    partial void OnEconCodeChanging(string value);
    partial void OnEconCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnCompTypeChanging(string value);
    partial void OnCompTypeChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnUsageChanging(System.Nullable<int> value);
    partial void OnUsageChanged();
    partial void OnDLRefChanging(string value);
    partial void OnDLRefChanged();
    partial void OnMainAddrRefChanging(System.Nullable<int> value);
    partial void OnMainAddrRefChanged();
    partial void OnTitle_EnChanging(string value);
    partial void OnTitle_EnChanged();
    partial void OnFName_EnChanging(string value);
    partial void OnFName_EnChanged();
    partial void OnLName_EnChanging(string value);
    partial void OnLName_EnChanged();
    partial void OnCompName_EnChanging(string value);
    partial void OnCompName_EnChanged();
    partial void OnNationalCodeChanging(string value);
    partial void OnNationalCodeChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    #endregion
		
		public Crspnd()
		{
			this._DL = default(EntityRef<DL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecType", DbType="Char(5)")]
		public string RecType
		{
			get
			{
				return this._RecType;
			}
			set
			{
				if ((this._RecType != value))
				{
					this.OnRecTypeChanging(value);
					this.SendPropertyChanging();
					this._RecType = value;
					this.SendPropertyChanged("RecType");
					this.OnRecTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconCode", DbType="VarChar(20)")]
		public string EconCode
		{
			get
			{
				return this._EconCode;
			}
			set
			{
				if ((this._EconCode != value))
				{
					this.OnEconCodeChanging(value);
					this.SendPropertyChanging();
					this._EconCode = value;
					this.SendPropertyChanged("EconCode");
					this.OnEconCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(50)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(50)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(20)")]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompType", DbType="Char(5)")]
		public string CompType
		{
			get
			{
				return this._CompType;
			}
			set
			{
				if ((this._CompType != value))
				{
					this.OnCompTypeChanging(value);
					this.SendPropertyChanging();
					this._CompType = value;
					this.SendPropertyChanged("CompType");
					this.OnCompTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="VarChar(100)")]
		public string CompName
		{
			get
			{
				return this._CompName;
			}
			set
			{
				if ((this._CompName != value))
				{
					this.OnCompNameChanging(value);
					this.SendPropertyChanging();
					this._CompName = value;
					this.SendPropertyChanged("CompName");
					this.OnCompNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usage", DbType="Int")]
		public System.Nullable<int> Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLRef", DbType="Char(10)")]
		public string DLRef
		{
			get
			{
				return this._DLRef;
			}
			set
			{
				if ((this._DLRef != value))
				{
					if (this._DL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDLRefChanging(value);
					this.SendPropertyChanging();
					this._DLRef = value;
					this.SendPropertyChanged("DLRef");
					this.OnDLRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainAddrRef", DbType="Int")]
		public System.Nullable<int> MainAddrRef
		{
			get
			{
				return this._MainAddrRef;
			}
			set
			{
				if ((this._MainAddrRef != value))
				{
					this.OnMainAddrRefChanging(value);
					this.SendPropertyChanging();
					this._MainAddrRef = value;
					this.SendPropertyChanged("MainAddrRef");
					this.OnMainAddrRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title_En", DbType="VarChar(50)")]
		public string Title_En
		{
			get
			{
				return this._Title_En;
			}
			set
			{
				if ((this._Title_En != value))
				{
					this.OnTitle_EnChanging(value);
					this.SendPropertyChanging();
					this._Title_En = value;
					this.SendPropertyChanged("Title_En");
					this.OnTitle_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName_En", DbType="VarChar(50)")]
		public string FName_En
		{
			get
			{
				return this._FName_En;
			}
			set
			{
				if ((this._FName_En != value))
				{
					this.OnFName_EnChanging(value);
					this.SendPropertyChanging();
					this._FName_En = value;
					this.SendPropertyChanged("FName_En");
					this.OnFName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName_En", DbType="VarChar(50)")]
		public string LName_En
		{
			get
			{
				return this._LName_En;
			}
			set
			{
				if ((this._LName_En != value))
				{
					this.OnLName_EnChanging(value);
					this.SendPropertyChanging();
					this._LName_En = value;
					this.SendPropertyChanged("LName_En");
					this.OnLName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName_En", DbType="VarChar(100)")]
		public string CompName_En
		{
			get
			{
				return this._CompName_En;
			}
			set
			{
				if ((this._CompName_En != value))
				{
					this.OnCompName_EnChanging(value);
					this.SendPropertyChanging();
					this._CompName_En = value;
					this.SendPropertyChanged("CompName_En");
					this.OnCompName_EnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalCode", DbType="VarChar(20)")]
		public string NationalCode
		{
			get
			{
				return this._NationalCode;
			}
			set
			{
				if ((this._NationalCode != value))
				{
					this.OnNationalCodeChanging(value);
					this.SendPropertyChanging();
					this._NationalCode = value;
					this.SendPropertyChanged("NationalCode");
					this.OnNationalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="VarChar(50)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="VarChar(30)")]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this.OnIDNoChanging(value);
					this.SendPropertyChanging();
					this._IDNo = value;
					this.SendPropertyChanged("IDNo");
					this.OnIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_Crspnd", Storage="_DL", ThisKey="DLRef", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL
		{
			get
			{
				return this._DL.Entity;
			}
			set
			{
				DL previousValue = this._DL.Entity;
				if (((previousValue != value) 
							|| (this._DL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL.Entity = null;
						previousValue.Crspnds.Remove(this);
					}
					this._DL.Entity = value;
					if ((value != null))
					{
						value.Crspnds.Add(this);
						this._DLRef = value.AccNum;
					}
					else
					{
						this._DLRef = default(string);
					}
					this.SendPropertyChanged("DL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="inv.InvProjects")]
	public partial class InvProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrjId;
		
		private string _PrjCode;
		
		private string _PrjName;
		
		private System.Nullable<int> _MngrRef;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrjIdChanging(int value);
    partial void OnPrjIdChanged();
    partial void OnPrjCodeChanging(string value);
    partial void OnPrjCodeChanged();
    partial void OnPrjNameChanging(string value);
    partial void OnPrjNameChanged();
    partial void OnMngrRefChanging(System.Nullable<int> value);
    partial void OnMngrRefChanged();
    #endregion
		
		public InvProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrjId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PrjId
		{
			get
			{
				return this._PrjId;
			}
			set
			{
				if ((this._PrjId != value))
				{
					this.OnPrjIdChanging(value);
					this.SendPropertyChanging();
					this._PrjId = value;
					this.SendPropertyChanged("PrjId");
					this.OnPrjIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrjCode", DbType="VarChar(20)")]
		public string PrjCode
		{
			get
			{
				return this._PrjCode;
			}
			set
			{
				if ((this._PrjCode != value))
				{
					this.OnPrjCodeChanging(value);
					this.SendPropertyChanging();
					this._PrjCode = value;
					this.SendPropertyChanged("PrjCode");
					this.OnPrjCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrjName", DbType="VarChar(50)")]
		public string PrjName
		{
			get
			{
				return this._PrjName;
			}
			set
			{
				if ((this._PrjName != value))
				{
					this.OnPrjNameChanging(value);
					this.SendPropertyChanging();
					this._PrjName = value;
					this.SendPropertyChanged("PrjName");
					this.OnPrjNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MngrRef", DbType="Int")]
		public System.Nullable<int> MngrRef
		{
			get
			{
				return this._MngrRef;
			}
			set
			{
				if ((this._MngrRef != value))
				{
					this.OnMngrRefChanging(value);
					this.SendPropertyChanging();
					this._MngrRef = value;
					this.SendPropertyChanged("MngrRef");
					this.OnMngrRefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rpa.RpaBank")]
	public partial class RpaBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RpaBankId;
		
		private string _Descr;
		
		private string _LatinDescr;
		
		private int _Version;
		
		private System.DateTime _LastVersionDate;
		
		private string _SLRef;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRpaBankIdChanging(int value);
    partial void OnRpaBankIdChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnLatinDescrChanging(string value);
    partial void OnLatinDescrChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnLastVersionDateChanging(System.DateTime value);
    partial void OnLastVersionDateChanged();
    partial void OnSLRefChanging(string value);
    partial void OnSLRefChanged();
    #endregion
		
		public RpaBank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RpaBankId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RpaBankId
		{
			get
			{
				return this._RpaBankId;
			}
			set
			{
				if ((this._RpaBankId != value))
				{
					this.OnRpaBankIdChanging(value);
					this.SendPropertyChanging();
					this._RpaBankId = value;
					this.SendPropertyChanged("RpaBankId");
					this.OnRpaBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(255)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinDescr", DbType="VarChar(255)")]
		public string LatinDescr
		{
			get
			{
				return this._LatinDescr;
			}
			set
			{
				if ((this._LatinDescr != value))
				{
					this.OnLatinDescrChanging(value);
					this.SendPropertyChanging();
					this._LatinDescr = value;
					this.SendPropertyChanged("LatinDescr");
					this.OnLatinDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVersionDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastVersionDate
		{
			get
			{
				return this._LastVersionDate;
			}
			set
			{
				if ((this._LastVersionDate != value))
				{
					this.OnLastVersionDateChanging(value);
					this.SendPropertyChanging();
					this._LastVersionDate = value;
					this.SendPropertyChanged("LastVersionDate");
					this.OnLastVersionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLRef", DbType="Char(10)")]
		public string SLRef
		{
			get
			{
				return this._SLRef;
			}
			set
			{
				if ((this._SLRef != value))
				{
					this.OnSLRefChanging(value);
					this.SendPropertyChanging();
					this._SLRef = value;
					this.SendPropertyChanged("SLRef");
					this.OnSLRefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rpa.RpaBankAccount")]
	public partial class RpaBankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RpaBankAccountId;
		
		private string _AccountNo;
		
		private int _RpaBankAccountTypeRef;
		
		private System.DateTime _OpeningDate;
		
		private System.Nullable<System.DateTime> _ReconcileDate;
		
		private System.Nullable<double> _FirstAmount;
		
		private System.Nullable<double> _CurrencyRate;
		
		private int _RpaBranchRef;
		
		private int _CurrencyRef;
		
		private string _DlRef;
		
		private System.Nullable<double> _CreditAmount;
		
		private System.Nullable<System.DateTime> _ClosingDate;
		
		private string _Descr;
		
		private System.Nullable<double> _ReserveAmount;
		
		private System.Nullable<double> _LastAmount;
		
		private System.Nullable<System.DateTime> _RateDate;
		
		private int _Status;
		
		private int _FixCurRef;
		
		private System.Nullable<int> _Version;
		
		private System.DateTime _LastVersionDate;
		
		private string _BankBillMacro;
		
		private string _SlRef;
		
		private string _IBNA;
		
		private EntityRef<DL> _DL;
		
		private EntityRef<RpaBankAccountType> _RpaBankAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRpaBankAccountIdChanging(int value);
    partial void OnRpaBankAccountIdChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnRpaBankAccountTypeRefChanging(int value);
    partial void OnRpaBankAccountTypeRefChanged();
    partial void OnOpeningDateChanging(System.DateTime value);
    partial void OnOpeningDateChanged();
    partial void OnReconcileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReconcileDateChanged();
    partial void OnFirstAmountChanging(System.Nullable<double> value);
    partial void OnFirstAmountChanged();
    partial void OnCurrencyRateChanging(System.Nullable<double> value);
    partial void OnCurrencyRateChanged();
    partial void OnRpaBranchRefChanging(int value);
    partial void OnRpaBranchRefChanged();
    partial void OnCurrencyRefChanging(int value);
    partial void OnCurrencyRefChanged();
    partial void OnDlRefChanging(string value);
    partial void OnDlRefChanged();
    partial void OnCreditAmountChanging(System.Nullable<double> value);
    partial void OnCreditAmountChanged();
    partial void OnClosingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingDateChanged();
    partial void OnDescrChanging(string value);
    partial void OnDescrChanged();
    partial void OnReserveAmountChanging(System.Nullable<double> value);
    partial void OnReserveAmountChanged();
    partial void OnLastAmountChanging(System.Nullable<double> value);
    partial void OnLastAmountChanged();
    partial void OnRateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFixCurRefChanging(int value);
    partial void OnFixCurRefChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnLastVersionDateChanging(System.DateTime value);
    partial void OnLastVersionDateChanged();
    partial void OnBankBillMacroChanging(string value);
    partial void OnBankBillMacroChanged();
    partial void OnSlRefChanging(string value);
    partial void OnSlRefChanged();
    partial void OnIBNAChanging(string value);
    partial void OnIBNAChanged();
    #endregion
		
		public RpaBankAccount()
		{
			this._DL = default(EntityRef<DL>);
			this._RpaBankAccountType = default(EntityRef<RpaBankAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RpaBankAccountId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RpaBankAccountId
		{
			get
			{
				return this._RpaBankAccountId;
			}
			set
			{
				if ((this._RpaBankAccountId != value))
				{
					this.OnRpaBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._RpaBankAccountId = value;
					this.SendPropertyChanged("RpaBankAccountId");
					this.OnRpaBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RpaBankAccountTypeRef", DbType="Int NOT NULL")]
		public int RpaBankAccountTypeRef
		{
			get
			{
				return this._RpaBankAccountTypeRef;
			}
			set
			{
				if ((this._RpaBankAccountTypeRef != value))
				{
					if (this._RpaBankAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRpaBankAccountTypeRefChanging(value);
					this.SendPropertyChanging();
					this._RpaBankAccountTypeRef = value;
					this.SendPropertyChanged("RpaBankAccountTypeRef");
					this.OnRpaBankAccountTypeRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime OpeningDate
		{
			get
			{
				return this._OpeningDate;
			}
			set
			{
				if ((this._OpeningDate != value))
				{
					this.OnOpeningDateChanging(value);
					this.SendPropertyChanging();
					this._OpeningDate = value;
					this.SendPropertyChanged("OpeningDate");
					this.OnOpeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReconcileDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ReconcileDate
		{
			get
			{
				return this._ReconcileDate;
			}
			set
			{
				if ((this._ReconcileDate != value))
				{
					this.OnReconcileDateChanging(value);
					this.SendPropertyChanging();
					this._ReconcileDate = value;
					this.SendPropertyChanged("ReconcileDate");
					this.OnReconcileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstAmount", DbType="Float")]
		public System.Nullable<double> FirstAmount
		{
			get
			{
				return this._FirstAmount;
			}
			set
			{
				if ((this._FirstAmount != value))
				{
					this.OnFirstAmountChanging(value);
					this.SendPropertyChanging();
					this._FirstAmount = value;
					this.SendPropertyChanged("FirstAmount");
					this.OnFirstAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRate", DbType="Float")]
		public System.Nullable<double> CurrencyRate
		{
			get
			{
				return this._CurrencyRate;
			}
			set
			{
				if ((this._CurrencyRate != value))
				{
					this.OnCurrencyRateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRate = value;
					this.SendPropertyChanged("CurrencyRate");
					this.OnCurrencyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RpaBranchRef", DbType="Int NOT NULL")]
		public int RpaBranchRef
		{
			get
			{
				return this._RpaBranchRef;
			}
			set
			{
				if ((this._RpaBranchRef != value))
				{
					this.OnRpaBranchRefChanging(value);
					this.SendPropertyChanging();
					this._RpaBranchRef = value;
					this.SendPropertyChanged("RpaBranchRef");
					this.OnRpaBranchRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRef", DbType="Int NOT NULL")]
		public int CurrencyRef
		{
			get
			{
				return this._CurrencyRef;
			}
			set
			{
				if ((this._CurrencyRef != value))
				{
					this.OnCurrencyRefChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRef = value;
					this.SendPropertyChanged("CurrencyRef");
					this.OnCurrencyRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DlRef", DbType="Char(10)")]
		public string DlRef
		{
			get
			{
				return this._DlRef;
			}
			set
			{
				if ((this._DlRef != value))
				{
					if (this._DL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDlRefChanging(value);
					this.SendPropertyChanging();
					this._DlRef = value;
					this.SendPropertyChanged("DlRef");
					this.OnDlRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Float")]
		public System.Nullable<double> CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descr", DbType="VarChar(50)")]
		public string Descr
		{
			get
			{
				return this._Descr;
			}
			set
			{
				if ((this._Descr != value))
				{
					this.OnDescrChanging(value);
					this.SendPropertyChanging();
					this._Descr = value;
					this.SendPropertyChanged("Descr");
					this.OnDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveAmount", DbType="Float")]
		public System.Nullable<double> ReserveAmount
		{
			get
			{
				return this._ReserveAmount;
			}
			set
			{
				if ((this._ReserveAmount != value))
				{
					this.OnReserveAmountChanging(value);
					this.SendPropertyChanging();
					this._ReserveAmount = value;
					this.SendPropertyChanged("ReserveAmount");
					this.OnReserveAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAmount", DbType="Float")]
		public System.Nullable<double> LastAmount
		{
			get
			{
				return this._LastAmount;
			}
			set
			{
				if ((this._LastAmount != value))
				{
					this.OnLastAmountChanging(value);
					this.SendPropertyChanging();
					this._LastAmount = value;
					this.SendPropertyChanged("LastAmount");
					this.OnLastAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RateDate
		{
			get
			{
				return this._RateDate;
			}
			set
			{
				if ((this._RateDate != value))
				{
					this.OnRateDateChanging(value);
					this.SendPropertyChanging();
					this._RateDate = value;
					this.SendPropertyChanged("RateDate");
					this.OnRateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixCurRef", DbType="Int NOT NULL")]
		public int FixCurRef
		{
			get
			{
				return this._FixCurRef;
			}
			set
			{
				if ((this._FixCurRef != value))
				{
					this.OnFixCurRefChanging(value);
					this.SendPropertyChanging();
					this._FixCurRef = value;
					this.SendPropertyChanged("FixCurRef");
					this.OnFixCurRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVersionDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime LastVersionDate
		{
			get
			{
				return this._LastVersionDate;
			}
			set
			{
				if ((this._LastVersionDate != value))
				{
					this.OnLastVersionDateChanging(value);
					this.SendPropertyChanging();
					this._LastVersionDate = value;
					this.SendPropertyChanged("LastVersionDate");
					this.OnLastVersionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankBillMacro", DbType="Char(5)")]
		public string BankBillMacro
		{
			get
			{
				return this._BankBillMacro;
			}
			set
			{
				if ((this._BankBillMacro != value))
				{
					this.OnBankBillMacroChanging(value);
					this.SendPropertyChanging();
					this._BankBillMacro = value;
					this.SendPropertyChanged("BankBillMacro");
					this.OnBankBillMacroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlRef", DbType="Char(10)")]
		public string SlRef
		{
			get
			{
				return this._SlRef;
			}
			set
			{
				if ((this._SlRef != value))
				{
					this.OnSlRefChanging(value);
					this.SendPropertyChanging();
					this._SlRef = value;
					this.SendPropertyChanged("SlRef");
					this.OnSlRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBNA", DbType="VarChar(255)")]
		public string IBNA
		{
			get
			{
				return this._IBNA;
			}
			set
			{
				if ((this._IBNA != value))
				{
					this.OnIBNAChanging(value);
					this.SendPropertyChanging();
					this._IBNA = value;
					this.SendPropertyChanged("IBNA");
					this.OnIBNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DL_RpaBankAccount", Storage="_DL", ThisKey="DlRef", OtherKey="AccNum", IsForeignKey=true)]
		public DL DL
		{
			get
			{
				return this._DL.Entity;
			}
			set
			{
				DL previousValue = this._DL.Entity;
				if (((previousValue != value) 
							|| (this._DL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DL.Entity = null;
						previousValue.RpaBankAccounts.Remove(this);
					}
					this._DL.Entity = value;
					if ((value != null))
					{
						value.RpaBankAccounts.Add(this);
						this._DlRef = value.AccNum;
					}
					else
					{
						this._DlRef = default(string);
					}
					this.SendPropertyChanged("DL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RpaBankAccountType_RpaBankAccount", Storage="_RpaBankAccountType", ThisKey="RpaBankAccountTypeRef", OtherKey="RpaBankAccountTypeID", IsForeignKey=true)]
		public RpaBankAccountType RpaBankAccountType
		{
			get
			{
				return this._RpaBankAccountType.Entity;
			}
			set
			{
				RpaBankAccountType previousValue = this._RpaBankAccountType.Entity;
				if (((previousValue != value) 
							|| (this._RpaBankAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RpaBankAccountType.Entity = null;
						previousValue.RpaBankAccounts.Remove(this);
					}
					this._RpaBankAccountType.Entity = value;
					if ((value != null))
					{
						value.RpaBankAccounts.Add(this);
						this._RpaBankAccountTypeRef = value.RpaBankAccountTypeID;
					}
					else
					{
						this._RpaBankAccountTypeRef = default(int);
					}
					this.SendPropertyChanged("RpaBankAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rpa.RpaBankAccountType")]
	public partial class RpaBankAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RpaBankAccountTypeID;
		
		private System.Nullable<int> _AccountType;
		
		private string _AccountTypeDescr;
		
		private System.Nullable<int> _HasChq;
		
		private EntitySet<RpaBankAccount> _RpaBankAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRpaBankAccountTypeIDChanging(int value);
    partial void OnRpaBankAccountTypeIDChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    partial void OnAccountTypeDescrChanging(string value);
    partial void OnAccountTypeDescrChanged();
    partial void OnHasChqChanging(System.Nullable<int> value);
    partial void OnHasChqChanged();
    #endregion
		
		public RpaBankAccountType()
		{
			this._RpaBankAccounts = new EntitySet<RpaBankAccount>(new Action<RpaBankAccount>(this.attach_RpaBankAccounts), new Action<RpaBankAccount>(this.detach_RpaBankAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RpaBankAccountTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RpaBankAccountTypeID
		{
			get
			{
				return this._RpaBankAccountTypeID;
			}
			set
			{
				if ((this._RpaBankAccountTypeID != value))
				{
					this.OnRpaBankAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RpaBankAccountTypeID = value;
					this.SendPropertyChanged("RpaBankAccountTypeID");
					this.OnRpaBankAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeDescr", DbType="VarChar(100)")]
		public string AccountTypeDescr
		{
			get
			{
				return this._AccountTypeDescr;
			}
			set
			{
				if ((this._AccountTypeDescr != value))
				{
					this.OnAccountTypeDescrChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeDescr = value;
					this.SendPropertyChanged("AccountTypeDescr");
					this.OnAccountTypeDescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasChq", DbType="Int")]
		public System.Nullable<int> HasChq
		{
			get
			{
				return this._HasChq;
			}
			set
			{
				if ((this._HasChq != value))
				{
					this.OnHasChqChanging(value);
					this.SendPropertyChanging();
					this._HasChq = value;
					this.SendPropertyChanged("HasChq");
					this.OnHasChqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RpaBankAccountType_RpaBankAccount", Storage="_RpaBankAccounts", ThisKey="RpaBankAccountTypeID", OtherKey="RpaBankAccountTypeRef")]
		public EntitySet<RpaBankAccount> RpaBankAccounts
		{
			get
			{
				return this._RpaBankAccounts;
			}
			set
			{
				this._RpaBankAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RpaBankAccounts(RpaBankAccount entity)
		{
			this.SendPropertyChanging();
			entity.RpaBankAccountType = this;
		}
		
		private void detach_RpaBankAccounts(RpaBankAccount entity)
		{
			this.SendPropertyChanging();
			entity.RpaBankAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Acc.AccVchType")]
	public partial class AccVchType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Title;
		
		private string _LatinTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLatinTitleChanging(string value);
    partial void OnLatinTitleChanged();
    #endregion
		
		public AccVchType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatinTitle", DbType="VarChar(30)")]
		public string LatinTitle
		{
			get
			{
				return this._LatinTitle;
			}
			set
			{
				if ((this._LatinTitle != value))
				{
					this.OnLatinTitleChanging(value);
					this.SendPropertyChanging();
					this._LatinTitle = value;
					this.SendPropertyChanged("LatinTitle");
					this.OnLatinTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
